学
一.JFrame窗口
import java.awt.*;          //导入awt包
import javax.swing.*;        //导入swing包
public class Example1 extends JFrame{                        //定义类Example类继承JFrame类
    public void CreateJFrame(String title) {                 //定义CreateJFrame方法
        JFrame jf = new JFrame(title);                       //实例化一个JFrame对象
        Container container = jf.getContentPane();           //获取一个容器
        JLabel jl = new JLabel("这是一个窗口");          //创建一个JLabel标签
        jl.setHorizontalAlignment(SwingConstants.CENTER);    //设置标签中文字居中
        container.add(jl);                                    //将标签添加到容器内
        container.setBackground(Color.white);                //将容器背景颜色设置为白色
        jf.setVisible(true);                                 //使窗口可视
        jf.setSize(200, 150);                  //设置窗口大小
        jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);     //设置窗口关闭方式
    }
   
     public static void main(String[] args) {
        new Example1().CreateJFrame("创建一个JFrame窗口");        //在主方法中调用CreateJFrame方法

    }
}

二.JDialog窗口实现从一个窗体弹出另一个窗体

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
public class MyFrame extends JFrame {
    public void MyFrame(){
        JFrame jf=new JFrame();//实例化一个JFrame对象
        Container container=jf.getContentPane();//将窗体转化为容器

        container.setLayout(null);
        JLabel jl=new JLabel("这是一个JFrame窗体");//在窗体中设置标签
        jl.setHorizontalAlignment(JLabel.CENTER);//将标签中的文字置于标签中间的位置
        container.add(jl);//将标签添加到容器中

        JButton jb=new JButton("测试");//实例化一个按钮属性
        jb.setBounds(20, 20,100, 50);
        jb.addActionListener(new ActionListener() {           //为按钮添加鼠标单击事件

            public void actionPerformed(ActionEvent e) {
                //使MyJDialog窗体可见
                new MyJDialog(MyFrame.this).setVisible(true);             //使对话框窗体可见，实现当用户点击该按钮时弹出对话框

            }
        });
        container.add(jb);//将按钮属性添加到容器中

        container.setBackground(Color.white);  //设置容器背景颜色

        jf.setTitle("按钮测试");//设置容器的标题
        jf.setVisible(true);//设置容器可视化
        jf.setSize(450, 400);//设置容器的大小

        jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);      //设置容器的关闭方式
    }
    public static void main(String[] args) {
        MyFrame fm=new MyFrame();          //在主方法中调用MyFrame方法
        fm.MyFrame();
    }
}
class MyJDialog extends JDialog{

    public MyJDialog(MyFrame frame){                  //定义构造方法
        //实例化一个JDialog类对象，指定对话框的父窗体，窗体标题，和类型
        super(frame,"第一个JDialog窗体",true);
        Container container=getContentPane();           //创建一个容器
        container.add(new JLabel("测试成功"));//在容器中添加标签
        container.setBackground(Color.yellow);
        setBounds(120,120,100,100);

    }
}
三.创建图标
实现paintIcon()方法中使用Graphics类中的方法绘制一个圆形的图标
import java.awt.*;
import javax.swing.*;


public class DrawIcon implements Icon {  //实现Icon接口
    private int width; //声明图标的宽
    private int height;//声明图标的长
    public int getIconHeight(){  //实现getIconHeight()方法
        return this.height;
    }
    public int getIconWidth(){  //实现getIconWidth()方法啊
        return this.width;
    }
    public DrawIcon(int width,int height){//定义构造方法
        this.width=width;
        this.height=height;
    }

    public void paintIcon(Component arg0, Graphics arg1,int x, int y){   //实现paintIcon()方法
        arg1.fillOval(x, y, width, height);       //绘制一个圆形
    }
    public static void main(String[] args){
        DrawIcon icon=new DrawIcon(15,15);
        JLabel j=new JLabel("测试",icon,SwingConstants.CENTER); //创建一个标签，并设置标签上的文字在标签正中间

        JFrame jf=new JFrame();//创建一个JFrame窗口
        Container c=jf.getContentPane();//获取一个容器

        c.add(j);        //标签添加到容器内
        jf.setSize(100,100);   //设置窗口位置
        jf.setVisible(true);                  //使窗口可见
        jf.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

    }
}


四.Swing使用图片(ImageIcon类添加图片)

import javax.swing.*;
public class Demo3 extends JFrame {
    public void GUI() {
        setTitle("图像测试");
        JPanel panel = new JPanel();
        JLabel label = new JLabel();
        ImageIcon img = new ImageIcon("src/frame/1.jpg");// 创建图片对象 相对路径(相对于工程根目录的位置)
        label.setIcon(img);
        panel.add(label);
        add(panel);
        setExtendedState(JFrame.MAXIMIZED_BOTH);       // JFrame最大化
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);// 设置JFrame关闭方式
        setVisible(true);                              // 显示JFrame
    }
    public static void main(String args[]) {           //主方法内调用GUI()方法
        Demo3 d = new Demo3();                         
        d.GUI();
    }
}



